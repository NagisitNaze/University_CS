     1                                 %line 1+1 procs.asm
     2                                 
     3                                 
     4                                 
     5                                 
     6                                 
     7                                 
     8                                 
     9                                 
    10                                 
    11                                 
    12                                 
    13                                 
    14                                 
    15                                 
    16                                 
    17                                 
    18                                 
    19                                 
    20                                 
    21                                 
    22                                 
    23                                 
    24                                 
    25                                 
    26                                 
    27                                 
    28                                 
    29                                 
    30                                 
    31                                 
    32                                 
    33                                 
    34                                 
    35                                 
    36                                 
    37                                 
    38                                 
    39                                 
    40                                 [section .data]
    41                                 
    42                                 
    43                                 
    44                                 
    45                                 LF equ 10
    46                                 NULL equ 0
    47                                 SPACE equ 0x20
    48                                 
    49                                 TRUE equ 1
    50                                 FALSE equ 0
    51                                 
    52                                 SUCCESS equ 0
    53                                 NOSUCCESS equ 1
    54                                 
    55                                 STDIN equ 0
    56                                 STDOUT equ 1
    57                                 STDERR equ 2
    58                                 
    59                                 SYS_read equ 0
    60                                 SYS_write equ 1
    61                                 SYS_open equ 2
    62                                 SYS_close equ 3
    63                                 SYS_fork equ 57
    64                                 SYS_exit equ 60
    65                                 SYS_creat equ 85
    66                                 SYS_time equ 201
    67                                 
    68                                 O_CREAT equ 0x40
    69                                 O_TRUNC equ 0x200
    70                                 O_APPEND equ 0x400
    71                                 
    72                                 O_RDONLY equ 000000
    73                                 O_WRONLY equ 000001
    74                                 O_RDWR equ 000002
    75                                 
    76                                 S_IRUSR equ 00400
    77                                 S_IWUSR equ 00200
    78                                 S_IXUSR equ 00100
    79                                 
    80                                 
    81                                 
    82                                 
    83 00000000 55736167653A202E2F-    usageMsg db "Usage: ./wc -w <searchWord> <-mc|-ic> -f <inputFile>"
    84 00000000 7763202D77203C7365-
    85 00000000 61726368576F72643E-
    86 00000000 203C2D6D637C2D6963-
    87 00000000 3E202D66203C696E70-
    88 00000000 757446696C653E     
    89 00000034 0A00                    db LF, NULL
    90                                 
    91 00000036 4572726F722C20696E-    errbadCLQ db "Error, invalid command line arguments."
    92 00000036 76616C696420636F6D-
    93 00000036 6D616E64206C696E65-
    94 00000036 20617267756D656E74-
    95 00000036 732E               
    96 0000005C 0A00                    db LF, NULL
    97                                 
    98 0000005E 4572726F722C20696E-    errWordSpec db "Error, invalid search word specifier."
    99 0000005E 76616C696420736561-
   100 0000005E 72636820776F726420-
   101 0000005E 737065636966696572-
   102 0000005E 2E                 
   103 00000083 0A00                    db LF, NULL
   104                                 
   105 00000085 4572726F722C207365-    errWordLength db "Error, search word length must be < 80 "
   106 00000085 6172636820776F7264-
   107 00000085 206C656E677468206D-
   108 00000085 757374206265203C20-
   109 00000085 383020             
   110 000000AC 636861726163746572-     db "characters."
   111 000000AC 732E               
   112 000000B7 0A00                    db LF, NULL
   113                                 
   114 000000B9 4572726F722C20696E-    errFileSpec db "Error, invalid input file specifier."
   115 000000B9 76616C696420696E70-
   116 000000B9 75742066696C652073-
   117 000000B9 70656369666965722E 
   118 000000DD 0A00                    db LF, NULL
   119                                 
   120 000000DF 4572726F722C20696E-    errCaseSpec db "Error, invalid match case specifier."
   121 000000DF 76616C6964206D6174-
   122 000000DF 636820636173652073-
   123 000000DF 70656369666965722E 
   124 00000103 0A00                    db LF, NULL
   125                                 
   126 00000105 4572726F722C206361-    errOpenIn db "Error, can not open input file."
   127 00000105 6E206E6F74206F7065-
   128 00000105 6E20696E7075742066-
   129 00000105 696C652E           
   130 00000124 0A00                    db LF, NULL
   131                                 
   132                                 
   133                                 
   134                                 
   135                                 MAXWORDLENGTH equ 80
   136                                 BUFFSIZE equ 250000
   137                                 
   138                                 
   139 00000126 90D0030000000000       bfMax dq BUFFSIZE
   140 0000012E 90D0030000000000       curr dq BUFFSIZE
   141 00000136 0000000000000000       wordIndex dq 0
   142                                 
   143 0000013E 00                     wasEOF db FALSE
   144                                 
   145 0000013F 4572726F7220726561-    errFileRead db "Error reading input file."
   146 0000013F 64696E6720696E7075-
   147 0000013F 742066696C652E     
   148 00000158 0A00                    db LF, NULL
   149                                 
   150                                 
   151                                 
   152                                 
   153 0000015A 466F756E64202700       resultStart db "Found '", NULL
   154 00000162 272000                 resultSpace db "' ", NULL
   155 00000165 2074696D65732E0A00     resultEnd db " times.", LF, NULL
   156                                 
   157                                 
   158                                 
   159                                 [section .bss]
   160                                 
   161 00000000 <gap>                  buff resb BUFFSIZE+1
   162 0003D091 <gap>                  tmpString resb MAXWORDLENGTH+1
   163                                 
   164                                 
   165                                 
   166                                 
   167                                 [section .text]
   168                                 
   169                                 
   170                                 
   171                                 
   172                                 
   173                                 
   174                                 
   175                                 
   176                                 
   177                                 
   178                                 
   179                                 
   180                                 
   181                                 
   182                                 
   183                                 
   184                                 
   185                                 
   186                                 [global checkParameters]
   187                                 checkParameters:
   188 00000000 53                      push rbx
   189 00000001 4154                    push r12
   190 00000003 4155                    push r13
   191                                 
   192 00000005 4D89C5                  mov r13, r8
   193 00000008 4989CC                  mov r12, rcx
   194 0000000B 4883FF01                cmp rdi, 1
   195 0000000F 7516                    jne noUsage
   196 00000011 48C7C7[00000000]        mov rdi, usageMsg
   197 00000018 E812030000              call printString
   198 0000001D 48C7C000000000          mov rax, FALSE
   199 00000024 E90B010000              jmp dn
   200                                  noUsage:
   201 00000029 4883FF06                cmp rdi, 6
   202 0000002D 7416                    je goodArgCount
   203 0000002F 48C7C7[00000000]        mov rdi, errbadCLQ
   204 00000036 E8F4020000              call printString
   205 0000003B 48C7C000000000          mov rax, FALSE
   206 00000042 E9ED000000              jmp dn
   207                                  goodArgCount:
   208 00000047 488B5E08                mov rbx, qword[rsi+8]
   209 0000004B 66813B2D77              cmp word[rbx], 0x772D
   210 00000050 7416                    je noErrorWordSpec
   211 00000052 48C7C7[00000000]        mov rdi, errWordSpec
   212 00000059 E8D1020000              call printString
   213 0000005E 48C7C000000000          mov rax, FALSE
   214 00000065 E9CA000000              jmp dn
   215                                  noErrorWordSpec:
   216 0000006A 488B5E10                mov rbx, qword[rsi+16]
   217 0000006E 4D31DB                  xor r11, r11
   218 00000071 4D31D2                  xor r10, r10
   219                                  length:
   220 00000074 468A1C13                mov r11b, byte[rbx+r10]
   221 00000078 4180FB00                cmp r11b, NULL
   222 0000007C 7403                    je endLength
   223 0000007E 49FFC2                  inc r10
   224 00000081 EBEF                    jmp length
   225                                  endLength:
   226 00000083 4983FA50                cmp r10, MAXWORDLENGTH
   227 00000087 7216                    jb goodLength
   228 00000089 48C7C7[00000000]        mov rdi, errWordLength
   229 00000090 E89A020000              call printString
   230 00000095 48C7C000000000          mov rax, FALSE
   231 0000009C E993000000              jmp dn
   232                                  goodLength:
   233 000000A1 488B1B                  mov rbx, qword[rbx]
   234 000000A4 48891A                  mov qword[rdx], rbx
   235 000000A7 488B5E18                mov rbx, qword[rsi+24]
   236 000000AB 813B2D6D6300            cmp dword[rbx], 0x00636D2D
   237 000000B1 7505                    jne checkTwo
   238 000000B3 41C6042401              mov byte[r12], TRUE
   239 000000B8 EB20                    jmp caseGood
   240                                  checkTwo:
   241 000000BA 813B2D696300            cmp dword[rbx], 0x0063692D
   242 000000C0 7418                    je caseGood
   243 000000C2 48C7C7[00000000]        mov rdi, errCaseSpec
   244 000000C9 E861020000              call printString
   245 000000CE 48C7C000000000          mov rax, FALSE
   246 000000D5 EB60                    jmp dn
   247 000000D7 41C6042400              mov byte[r12], FALSE
   248                                  caseGood:
   249 000000DC 488B5E20                mov rbx, qword[rsi+32]
   250 000000E0 66813B2D66              cmp word[rbx], 0x662D
   251 000000E5 7413                    je goodFileSpec
   252 000000E7 48C7C7[00000000]        mov rdi, errFileSpec
   253 000000EE E83C020000              call printString
   254 000000F3 48C7C000000000          mov rax, FALSE
   255 000000FA EB3B                    jmp dn
   256                                  goodFileSpec:
   257 000000FC 488B5E28                mov rbx, qword[rsi+40]
   258 00000100 48C7C002000000          mov rax, SYS_open
   259 00000107 4889DF                  mov rdi, rbx
   260 0000010A 48C7C600000000          mov rsi, O_RDONLY
   261 00000111 0F05                    syscall
   262 00000113 4883F800                cmp rax, 0
   263 00000117 7D13                    jge noError
   264 00000119 48C7C7[00000000]        mov rdi, errOpenIn
   265 00000120 E80A020000              call printString
   266 00000125 48C7C000000000          mov rax, FALSE
   267 0000012C EB09                    jmp dn
   268                                  noError:
   269 0000012E 41894500                mov dword[r13], eax
   270 00000132 48C7C001000000          mov rax, TRUE
   271                                  dn:
   272 00000139 415D                    pop r13
   273 0000013B 415C                    pop r12
   274 0000013D 5B                      pop rbx
   275 0000013E C3                      ret
   276                                 
   277                                 
   278                                 
   279                                 
   280                                 
   281                                 
   282                                 
   283                                 
   284                                 
   285                                 
   286                                 
   287                                 
   288                                 
   289                                 
   290                                 
   291                                 
   292                                 
   293                                 
   294                                 
   295                                 
   296                                 
   297                                 
   298                                 
   299                                 
   300                                 
   301                                 [global getWord]
   302                                 getWord:
   303 0000013F 53                      push rbx
   304 00000140 4154                    push r12
   305 00000142 4155                    push r13
   306                                 
   307 00000144 4889FB                  mov rbx, rdi
   308                                 
   309 00000147 4C8B1425[00000000]      mov r10, qword[bfMax]
   310 0000014F 4C391425[00000000]      cmp qword[curr], r10
   311 00000157 726F                    jb underBuffSize
   312 00000159 803C25[00000000]01      cmp byte[wasEOF], TRUE
   313 00000161 750A                    jne notEOF
   314 00000163 48C7C000000000          mov rax, FALSE
   315 0000016A E9D6000000              jmp _dn
   316                                  notEOF:
   317 0000016F 48C7C000000000          mov rax, SYS_read
   318 00000176 4889F7                  mov rdi, rsi
   319 00000179 48C7C6[00000000]        mov rsi, buff
   320 00000180 48C7C290D00300          mov rdx, BUFFSIZE
   321 00000187 0F05                    syscall
   322                                 
   323 00000189 4883F800                cmp rax, 0
   324 0000018D 7D16                    jge readFine
   325 0000018F 48C7C0[00000000]        mov rax, errFileRead
   326 00000196 E894010000              call printString
   327 0000019B 48C7C000000000          mov rax, FALSE
   328 000001A2 E99E000000              jmp _dn
   329                                  readFine:
   330                                 
   331 000001A7 483D90D00300            cmp rax, BUFFSIZE
   332 000001AD 740E                    je notEof
   333 000001AF C60425[00000000]01      mov byte[wasEOF], TRUE
   334 000001B7 48890425[00000000]      mov qword[bfMax], rax
   335                                  notEof
   336 000001BF 4D31D2                  xor r10, r10
   337 000001C2 4C891425[00000000]      mov qword[curr], r10
   338                                  underBuffSize:
   339                                 
   340 000001CA 4D31C9                  xor r9, r9
   341 000001CD 4D31DB                  xor r11, r11
   342 000001D0 4D31E4                  xor r12, r12
   343 000001D3 49C7C4[00000000]        mov r12, buff
   344 000001DA 4C8B2C25[00000000]      mov r13, qword[wordIndex]
   345 000001E2 4C8B0C25[00000000]      mov r9, qword[curr]
   346                                 
   347 000001EA 478A1C0C                mov r11b, byte[r12+r9]
   348 000001EE 4180FB20                cmp r11b, 0x20
   349 000001F2 750A                    jne wordCont
   350 000001F4 4D31ED                  xor r13, r13
   351 000001F7 4180FB10                cmp r11b, 0x10
   352 000001FB 7501                    jne wordCont
   353 000001FD 4D31ED                  xor r13, r13
   354                                  wordCont:
   355                                 
   356                                  getNextWord:
   357 00000200 478A1C0C                mov r11b, byte[r12+r9]
   358 00000204 4180FB20                cmp r11b, 0x20
   359 00000208 760A                    jbe endNextWord
   360 0000020A 46881C2B                mov byte[rbx+r13], r11b
   361 0000020E 49FFC5                  inc r13
   362 00000211 49FFC1                  inc r9
   363 00000214 EBE8                    jmp getNextWord
   364                                  endNextWord:
   365                                 
   366 00000216 42C6042B00              mov byte[rbx+r13], NULL
   367                                  ignoreSpaces:
   368 0000021B 478A1C0C                mov r11b, byte[r12+r9]
   369 0000021F 4180FB20                cmp r11b, 0x20
   370 00000223 770C                    ja endIgnoreSpaces
   371 00000225 4180FB00                cmp r11b, 0x00
   372 00000229 7406                    je endIgnoreSpaces
   373 0000022B 4D31ED                  xor r13, r13
   374 0000022E 49FFC1                  inc r9
   375 00000231 EBE6                    jmp ignoreSpaces
   376                                  endIgnoreSpaces:
   377                                 
   378 00000233 4C890C25[00000000]      mov qword[curr], r9
   379 0000023B 4C892C25[00000000]      mov qword[wordIndex], r13
   380 00000243 48C7C001000000          mov rax, TRUE
   381                                  _dn:
   382 0000024A 415D                    pop r13
   383 0000024C 415C                    pop r12
   384 0000024E 5B                      pop rbx
   385 0000024F C3                      ret
   386                                 
   387                                 
   388                                 
   389                                 
   390                                 
   391                                 
   392                                 
   393                                 
   394                                 
   395                                 
   396                                 
   397                                 
   398                                 
   399                                 
   400                                 
   401                                 [global checkWord]
   402                                 checkWord:
   403 00000250 53                      push rbx
   404                                 
   405 00000251 4D31DB                  xor r11, r11
   406 00000254 4D31E4                  xor r12, r12
   407                                  wordLoop:
   408 00000257 448A1F                  mov r11b, byte[rdi]
   409 0000025A 448A26                  mov r12b, byte[rsi]
   410 0000025D 4883FA01                cmp rdx, TRUE
   411 00000261 741E                    je contCompare
   412 00000263 4180FB41                cmp r11b, 0x41
   413 00000267 7208                    jb skipSearchWrd
   414 00000269 4180FB5A                cmp r11b, 0x5A
   415 0000026D 7702                    ja skipSearchWrd
   416 0000026F 4180C320                add r11b, 0x20
   417                                  skipSearchWrd:
   418 00000273 4180FC41                cmp r12b, 0x41
   419 00000277 7208                    jb skipCurrentWrd
   420 00000279 4180FC5A                cmp r12b, 0x5A
   421 0000027D 7702                    ja skipCurrentWrd
   422 0000027F 4180C420                add r12b, 0x20
   423                                  skipCurrentWrd:
   424                                  contCompare:
   425 00000283 4538E3                  cmp r11b, r12b
   426 00000286 7512                    jne endWordLoop
   427 00000288 4180FB00                cmp r11b, NULL
   428 0000028C 7406                    je endWordLoopInc
   429 0000028E 48FFC7                  inc rdi
   430 00000291 48FFC6                  inc rsi
   431 00000294 EBBF                    jmp wordLoop
   432                                  endWordLoopInc:
   433 00000296 8B19                    mov ebx, dword[rcx]
   434 00000298 FFC3                    inc ebx
   435 0000029A 8919                    mov dword[rcx], ebx
   436                                  endWordLoop:
   437                                 
   438 0000029C 5B                      pop rbx
   439 0000029D C3                      ret
   440                                 
   441                                 
   442                                 
   443                                 
   444                                 
   445                                 
   446                                 
   447                                 
   448                                 
   449                                 
   450                                 
   451                                 
   452                                 
   453                                 
   454                                 
   455                                 [global displayResults]
   456                                 displayResults:
   457 0000029E 53                      push rbx
   458 0000029F 4154                    push r12
   459                                 
   460 000002A1 4989F4                  mov r12, rsi
   461 000002A4 4889FB                  mov rbx, rdi
   462                                 
   463 000002A7 48C7C7[00000000]        mov rdi, resultStart
   464 000002AE E87C000000              call printString
   465 000002B3 4889DF                  mov rdi, rbx
   466 000002B6 E874000000              call printString
   467 000002BB 48C7C7[00000000]        mov rdi, resultSpace
   468 000002C2 E868000000              call printString
   469                                 
   470 000002C7 4489E0                  mov eax, r12d
   471 000002CA 48C7C606000000          mov rsi, 6
   472 000002D1 49C7C230000000          mov r10, 0x30
   473 000002D8 48C7C100000000          mov rcx, 0
   474 000002DF 49C7C1[00000000]        mov r9, tmpString
   475                                  int2senaryloop1:
   476 000002E6 BA00000000              mov edx, 0
   477 000002EB F7F6                    div esi
   478 000002ED 48FFC1                  inc rcx
   479 000002F0 83F800                  cmp eax, 0
   480 000002F3 75EF                    jne int2senaryloop1
   481 000002F5 4489E0                  mov eax, r12d
   482 000002F8 4901C9                  add r9, rcx
   483 000002FB 41C60100                mov byte[r9], NULL
   484 000002FF 49FFC9                  dec r9
   485                                  int2senaryloop2:
   486 00000302 BA00000000              mov edx, 0
   487 00000307 F7F6                    div esi
   488 00000309 4401D2                  add edx, r10d
   489 0000030C 418811                  mov byte[r9], dl
   490 0000030F 49FFC9                  dec r9
   491 00000312 83F800                  cmp eax, 0
   492 00000315 75E9                    jne int2senaryloop2
   493                                 
   494 00000317 4831FF                  xor rdi, rdi
   495 0000031A BF[00000000]            mov edi, tmpString
   496 0000031F E80B000000              call printString
   497                                 
   498 00000324 48C7C7[00000000]        mov rdi, resultEnd
   499 0000032B E8FFFFFFFF              call printString
   500                                 
   501 00000330 415C                    pop r12
   502 00000332 5B                      pop rbx
   503 00000333 C3                      ret
   504                                 
   505                                 
   506                                 
   507                                 
   508                                 
   509                                 
   510                                 
   511                                 
   512                                 
   513                                 
   514                                 
   515                                 
   516                                 
   517                                 
   518                                 
   519                                 
   520                                 
   521                                 
   522                                 [global printString]
   523                                 printString:
   524                                 
   525                                 
   526                                 
   527                                 
   528 00000334 48C7C200000000          mov rdx, 0
   529                                 strCountLoop:
   530 0000033B 803C1700                cmp byte [rdi+rdx], NULL
   531 0000033F 7403                    je strCountLoopDone
   532 00000341 48FFC2                  inc rdx
   533 00000344 EBF3                    jmp strCountLoop
   534                                 strCountLoopDone:
   535 00000346 4883FA00                cmp rdx, 0
   536 0000034A 7411                    je printStringDone
   537                                 
   538                                 
   539                                 
   540                                 
   541 0000034C 48C7C001000000          mov rax, SYS_write
   542 00000353 4889FE                  mov rsi, rdi
   543 00000356 48C7C701000000          mov rdi, STDOUT
   544                                 
   545 0000035D 0F05                    syscall
   546                                 
   547                                 
   548                                 
   549                                 
   550                                 printStringDone:
   551 0000035F C3                      ret
   552                                 
   553                                 
   554                                 
   555                                 
