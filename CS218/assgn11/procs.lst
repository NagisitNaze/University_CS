     1                                 %line 1+1 procs.asm
     2                                 
     3                                 
     4                                 
     5                                 
     6                                 
     7                                 
     8                                 
     9                                 
    10                                 
    11                                 
    12                                 
    13                                 
    14                                 
    15                                 
    16                                 
    17                                 
    18                                 
    19                                 
    20                                 
    21                                 
    22                                 
    23                                 
    24                                 
    25                                 
    26                                 
    27                                 
    28                                 
    29                                 
    30                                 
    31                                 
    32                                 
    33                                 
    34                                 
    35                                 
    36                                 
    37                                 
    38                                 
    39                                 
    40                                 [section .data]
    41                                 
    42                                 
    43                                 
    44                                 
    45                                 LF equ 10
    46                                 NULL equ 0
    47                                 SPACE equ 0x20
    48                                 
    49                                 TRUE equ 1
    50                                 FALSE equ 0
    51                                 
    52                                 SUCCESS equ 0
    53                                 NOSUCCESS equ 1
    54                                 
    55                                 STDIN equ 0
    56                                 STDOUT equ 1
    57                                 STDERR equ 2
    58                                 
    59                                 SYS_read equ 0
    60                                 SYS_write equ 1
    61                                 SYS_open equ 2
    62                                 SYS_close equ 3
    63                                 SYS_fork equ 57
    64                                 SYS_exit equ 60
    65                                 SYS_creat equ 85
    66                                 SYS_time equ 201
    67                                 
    68                                 O_CREAT equ 0x40
    69                                 O_TRUNC equ 0x200
    70                                 O_APPEND equ 0x400
    71                                 
    72                                 O_RDONLY equ 000000
    73                                 O_WRONLY equ 000001
    74                                 O_RDWR equ 000002
    75                                 
    76                                 S_IRUSR equ 00400
    77                                 S_IWUSR equ 00200
    78                                 S_IXUSR equ 00100
    79                                 
    80                                 
    81                                 
    82                                 
    83 00000000 55736167653A202E2F-    usageMsg db "Usage: ./wc -w <searchWord> <-mc|-ic> -f <inputFile>"
    84 00000000 7763202D77203C7365-
    85 00000000 61726368576F72643E-
    86 00000000 203C2D6D637C2D6963-
    87 00000000 3E202D66203C696E70-
    88 00000000 757446696C653E     
    89 00000034 0A00                    db LF, NULL
    90                                 
    91 00000036 4572726F722C20696E-    errbadCLQ db "Error, invalid command line arguments."
    92 00000036 76616C696420636F6D-
    93 00000036 6D616E64206C696E65-
    94 00000036 20617267756D656E74-
    95 00000036 732E               
    96 0000005C 0A00                    db LF, NULL
    97                                 
    98 0000005E 4572726F722C20696E-    errWordSpec db "Error, invalid search word specifier."
    99 0000005E 76616C696420736561-
   100 0000005E 72636820776F726420-
   101 0000005E 737065636966696572-
   102 0000005E 2E                 
   103 00000083 0A00                    db LF, NULL
   104                                 
   105 00000085 4572726F722C207365-    errWordLength db "Error, search word length must be < 80 "
   106 00000085 6172636820776F7264-
   107 00000085 206C656E677468206D-
   108 00000085 757374206265203C20-
   109 00000085 383020             
   110 000000AC 636861726163746572-     db "characters."
   111 000000AC 732E               
   112 000000B7 0A00                    db LF, NULL
   113                                 
   114 000000B9 4572726F722C20696E-    errFileSpec db "Error, invalid input file specifier."
   115 000000B9 76616C696420696E70-
   116 000000B9 75742066696C652073-
   117 000000B9 70656369666965722E 
   118 000000DD 0A00                    db LF, NULL
   119                                 
   120 000000DF 4572726F722C20696E-    errCaseSpec db "Error, invalid match case specifier."
   121 000000DF 76616C6964206D6174-
   122 000000DF 636820636173652073-
   123 000000DF 70656369666965722E 
   124 00000103 0A00                    db LF, NULL
   125                                 
   126 00000105 4572726F722C206361-    errOpenIn db "Error, can not open input file."
   127 00000105 6E206E6F74206F7065-
   128 00000105 6E20696E7075742066-
   129 00000105 696C652E           
   130 00000124 0A00                    db LF, NULL
   131                                 
   132                                 
   133                                 
   134                                 
   135                                 MAXWORDLENGTH equ 80
   136                                 BUFFSIZE equ 250000
   137                                 
   138                                 
   139 00000126 90D0030000000000       bfMax dq BUFFSIZE
   140 0000012E 90D0030000000000       curr dq BUFFSIZE
   141 00000136 0000000000000000       wordIndex dq 0
   142                                 
   143 0000013E 00                     wasEOF db FALSE
   144                                 
   145 0000013F 4572726F7220726561-    errFileRead db "Error reading input file."
   146 0000013F 64696E6720696E7075-
   147 0000013F 742066696C652E     
   148 00000158 0A00                    db LF, NULL
   149                                 
   150                                 
   151                                 
   152                                 
   153 0000015A 466F756E64202700       resultStart db "Found '", NULL
   154 00000162 272000                 resultSpace db "' ", NULL
   155 00000165 2074696D65732E0A00     resultEnd db " times.", LF, NULL
   156                                 
   157                                 
   158                                 
   159                                 [section .bss]
   160                                 
   161 00000000 <gap>                  buff resb BUFFSIZE+1
   162 0003D091 <gap>                  tmpString resb MAXWORDLENGTH+1
   163                                 
   164                                 
   165                                 
   166                                 
   167                                 [section .text]
   168                                 
   169                                 
   170                                 
   171                                 
   172                                 
   173                                 
   174                                 
   175                                 
   176                                 
   177                                 
   178                                 
   179                                 
   180                                 
   181                                 
   182                                 
   183                                 
   184                                 
   185                                 
   186                                 [global checkParameters]
   187                                 checkParameters:
   188 00000000 53                      push rbx
   189 00000001 4154                    push r12
   190 00000003 4155                    push r13
   191                                 
   192 00000005 4D89C5                  mov r13, r8
   193 00000008 4989CC                  mov r12, rcx
   194 0000000B 4883FF01                cmp rdi, 1
   195 0000000F 7516                    jne noUsage
   196 00000011 48C7C7[00000000]        mov rdi, usageMsg
   197 00000018 E81B030000              call printString
   198 0000001D 48C7C000000000          mov rax, FALSE
   199 00000024 E926010000              jmp dn
   200                                  noUsage:
   201 00000029 4883FF06                cmp rdi, 6
   202 0000002D 7416                    je goodArgCount
   203 0000002F 48C7C7[00000000]        mov rdi, errbadCLQ
   204 00000036 E8FD020000              call printString
   205 0000003B 48C7C000000000          mov rax, FALSE
   206 00000042 E908010000              jmp dn
   207                                  goodArgCount:
   208 00000047 488B5E08                mov rbx, qword[rsi+8]
   209 0000004B 803B2D                  cmp byte[rbx], 0x2D
   210 0000004E 750C                    jne errorWordSpec
   211 00000050 807B0177                cmp byte[rbx+1], 0x77
   212 00000054 7506                    jne errorWordSpec
   213 00000056 807B0200                cmp byte[rbx+2], 0x00
   214 0000005A 7500                    jne errorWordSpec
   215 0000005C EB16                    jmp noErrorWordSpec
   216                                  errorWordSpec:
   217 0000005E 48C7C7[00000000]        mov rdi, errWordSpec
   218 00000065 E8CE020000              call printString
   219 0000006A 48C7C000000000          mov rax, FALSE
   220 00000071 E9D9000000              jmp dn
   221                                  noErrorWordSpec:
   222 00000076 488B5E10                mov rbx, qword[rsi+16]
   223 0000007A 4D31DB                  xor r11, r11
   224 0000007D 4D31D2                  xor r10, r10
   225                                  length:
   226 00000080 468A1C13                mov r11b, byte[rbx+r10]
   227 00000084 4180FB00                cmp r11b, NULL
   228 00000088 7409                    je endLength
   229 0000008A 44881A                  mov byte[rdx], r11b
   230 0000008D 48FFC2                  inc rdx
   231 00000090 49FFC2                  inc r10
   232 00000093 EBE9                    jmp length
   233                                  endLength:
   234 00000095 C60200                  mov byte[rdx], NULL
   235 00000098 4983FA50                cmp r10, MAXWORDLENGTH
   236 0000009C 7216                    jb goodLength
   237 0000009E 48C7C7[00000000]        mov rdi, errWordLength
   238 000000A5 E88E020000              call printString
   239 000000AA 48C7C000000000          mov rax, FALSE
   240 000000B1 E999000000              jmp dn
   241                                  goodLength:
   242 000000B6 488B5E18                mov rbx, qword[rsi+24]
   243 000000BA 813B2D6D6300            cmp dword[rbx], 0x00636D2D
   244 000000C0 7505                    jne checkTwo
   245 000000C2 41C6042401              mov byte[r12], TRUE
   246 000000C7 EB20                    jmp caseGood
   247                                  checkTwo:
   248 000000C9 813B2D696300            cmp dword[rbx], 0x0063692D
   249 000000CF 7418                    je caseGood
   250 000000D1 48C7C7[00000000]        mov rdi, errCaseSpec
   251 000000D8 E85B020000              call printString
   252 000000DD 48C7C000000000          mov rax, FALSE
   253 000000E4 EB6C                    jmp dn
   254 000000E6 41C6042400              mov byte[r12], FALSE
   255                                  caseGood:
   256 000000EB 488B5E20                mov rbx, qword[rsi+32]
   257 000000EF 803B2D                  cmp byte[rbx], 0x2D
   258 000000F2 750C                    jne fileSpecError
   259 000000F4 807B0166                cmp byte[rbx+1], 0x66
   260 000000F8 7506                    jne fileSpecError
   261 000000FA 807B0200                cmp byte[rbx+2], 0x00
   262 000000FE 7500                    jne fileSpecError
   263 00000100 EB13                    jmp goodFileSpec
   264                                  fileSpecError:
   265 00000102 48C7C7[00000000]        mov rdi, errFileSpec
   266 00000109 E82A020000              call printString
   267 0000010E 48C7C000000000          mov rax, FALSE
   268 00000115 EB3B                    jmp dn
   269                                  goodFileSpec:
   270 00000117 488B5E28                mov rbx, qword[rsi+40]
   271 0000011B 48C7C002000000          mov rax, SYS_open
   272 00000122 4889DF                  mov rdi, rbx
   273 00000125 48C7C600000000          mov rsi, O_RDONLY
   274 0000012C 0F05                    syscall
   275 0000012E 4883F800                cmp rax, 0
   276 00000132 7D13                    jge noError
   277 00000134 48C7C7[00000000]        mov rdi, errOpenIn
   278 0000013B E8F8010000              call printString
   279 00000140 48C7C000000000          mov rax, FALSE
   280 00000147 EB09                    jmp dn
   281                                  noError:
   282 00000149 41894500                mov dword[r13], eax
   283 0000014D 48C7C001000000          mov rax, TRUE
   284                                  dn:
   285 00000154 415D                    pop r13
   286 00000156 415C                    pop r12
   287 00000158 5B                      pop rbx
   288 00000159 C3                      ret
   289                                 
   290                                 
   291                                 
   292                                 
   293                                 
   294                                 
   295                                 
   296                                 
   297                                 
   298                                 
   299                                 
   300                                 
   301                                 
   302                                 
   303                                 
   304                                 
   305                                 
   306                                 
   307                                 
   308                                 
   309                                 
   310                                 
   311                                 
   312                                 
   313                                 
   314                                 [global getWord]
   315                                 getWord:
   316 0000015A 53                      push rbx
   317 0000015B 4154                    push r12
   318 0000015D 4155                    push r13
   319 0000015F 4156                    push r14
   320                                 
   321 00000161 4889FB                  mov rbx, rdi
   322 00000164 4989F6                  mov r14, rsi
   323                                 
   324                                  reBuffer:
   325 00000167 4C8B1425[00000000]      mov r10, qword[bfMax]
   326 0000016F 4C391425[00000000]      cmp qword[curr], r10
   327 00000177 726F                    jb underBuffSize
   328 00000179 803C25[00000000]01      cmp byte[wasEOF], TRUE
   329 00000181 750A                    jne notEOF
   330 00000183 48C7C000000000          mov rax, FALSE
   331 0000018A E9BD000000              jmp _dn
   332                                  notEOF:
   333 0000018F 48C7C000000000          mov rax, SYS_read
   334 00000196 4C89F7                  mov rdi, r14
   335 00000199 48C7C6[00000000]        mov rsi, buff
   336 000001A0 48C7C290D00300          mov rdx, BUFFSIZE
   337 000001A7 0F05                    syscall
   338                                 
   339 000001A9 4883F800                cmp rax, 0
   340 000001AD 7D16                    jge readFine
   341 000001AF 48C7C0[00000000]        mov rax, errFileRead
   342 000001B6 E87D010000              call printString
   343 000001BB 48C7C000000000          mov rax, FALSE
   344 000001C2 E985000000              jmp _dn
   345                                  readFine:
   346                                 
   347 000001C7 483D90D00300            cmp rax, BUFFSIZE
   348 000001CD 740E                    je notEof
   349 000001CF C60425[00000000]01      mov byte[wasEOF], TRUE
   350 000001D7 48890425[00000000]      mov qword[bfMax], rax
   351                                  notEof
   352 000001DF 4D31D2                  xor r10, r10
   353 000001E2 4C891425[00000000]      mov qword[curr], r10
   354                                  underBuffSize:
   355                                 
   356 000001EA 4D31C9                  xor r9, r9
   357 000001ED 4D31DB                  xor r11, r11
   358 000001F0 4D31E4                  xor r12, r12
   359 000001F3 49C7C4[00000000]        mov r12, buff
   360 000001FA 4C8B0C25[00000000]      mov r9, qword[curr]
   361                                 
   362                                  getNextWord:
   363 00000202 478A1C0C                mov r11b, byte[r12+r9]
   364 00000206 4180FB20                cmp r11b, 0x20
   365 0000020A 7609                    jbe endNextWord
   366 0000020C 44881B                  mov byte[rbx], r11b
   367 0000020F 48FFC3                  inc rbx
   368 00000212 49FFC1                  inc r9
   369 00000215 EBE9                    jmp getNextWord
   370                                  endNextWord:
   371                                 
   372 00000217 4180FB00                cmp r11b, 0x00
   373 0000021B 750B                    jne noReBuffer
   374 0000021D 4C890C25[00000000]      mov qword[curr], r9
   375 00000225 E938FFFFFF              jmp reBuffer
   376                                  noReBuffer:
   377                                 
   378                                 
   379                                  ignoreSpaces:
   380 0000022A 478A1C0C                mov r11b, byte[r12+r9]
   381 0000022E 4180FB20                cmp r11b, 0x20
   382 00000232 7709                    ja endIgnoreSpaces
   383 00000234 4180FB00                cmp r11b, 0x00
   384 00000238 7403                    je endIgnoreSpaces
   385 0000023A 49FFC1                  inc r9
   386 0000023D EBE9                    jmp ignoreSpaces
   387                                  endIgnoreSpaces:
   388                                 
   389 0000023F C60300                  mov byte[rbx], NULL
   390 00000242 4C890C25[00000000]      mov qword[curr], r9
   391 0000024A 48C7C001000000          mov rax, TRUE
   392                                  _dn:
   393 00000251 415E                    pop r14
   394 00000253 415D                    pop r13
   395 00000255 415C                    pop r12
   396 00000257 5B                      pop rbx
   397 00000258 C3                      ret
   398                                 
   399                                 
   400                                 
   401                                 
   402                                 
   403                                 
   404                                 
   405                                 
   406                                 
   407                                 
   408                                 
   409                                 
   410                                 
   411                                 
   412                                 
   413                                 [global checkWord]
   414                                 checkWord:
   415 00000259 53                      push rbx
   416                                 
   417 0000025A 4D31DB                  xor r11, r11
   418 0000025D 4D31E4                  xor r12, r12
   419                                  wordLoop:
   420 00000260 448A1F                  mov r11b, byte[rdi]
   421 00000263 448A26                  mov r12b, byte[rsi]
   422 00000266 4883FA01                cmp rdx, TRUE
   423 0000026A 741E                    je contCompare
   424 0000026C 4180FB41                cmp r11b, 0x41
   425 00000270 7208                    jb skipSearchWrd
   426 00000272 4180FB5A                cmp r11b, 0x5A
   427 00000276 7702                    ja skipSearchWrd
   428 00000278 4180C320                add r11b, 0x20
   429                                  skipSearchWrd:
   430 0000027C 4180FC41                cmp r12b, 0x41
   431 00000280 7208                    jb skipCurrentWrd
   432 00000282 4180FC5A                cmp r12b, 0x5A
   433 00000286 7702                    ja skipCurrentWrd
   434 00000288 4180C420                add r12b, 0x20
   435                                  skipCurrentWrd:
   436                                  contCompare:
   437 0000028C 4538E3                  cmp r11b, r12b
   438 0000028F 7512                    jne endWordLoop
   439 00000291 4180FB00                cmp r11b, NULL
   440 00000295 7406                    je endWordLoopInc
   441 00000297 48FFC7                  inc rdi
   442 0000029A 48FFC6                  inc rsi
   443 0000029D EBBF                    jmp wordLoop
   444                                  endWordLoopInc:
   445 0000029F 8B19                    mov ebx, dword[rcx]
   446 000002A1 FFC3                    inc ebx
   447 000002A3 8919                    mov dword[rcx], ebx
   448                                  endWordLoop:
   449                                 
   450 000002A5 5B                      pop rbx
   451 000002A6 C3                      ret
   452                                 
   453                                 
   454                                 
   455                                 
   456                                 
   457                                 
   458                                 
   459                                 
   460                                 
   461                                 
   462                                 
   463                                 
   464                                 
   465                                 
   466                                 
   467                                 [global displayResults]
   468                                 displayResults:
   469 000002A7 53                      push rbx
   470 000002A8 4154                    push r12
   471                                 
   472 000002AA 4989F4                  mov r12, rsi
   473 000002AD 4889FB                  mov rbx, rdi
   474                                 
   475 000002B0 48C7C7[00000000]        mov rdi, resultStart
   476 000002B7 E87C000000              call printString
   477 000002BC 4889DF                  mov rdi, rbx
   478 000002BF E874000000              call printString
   479 000002C4 48C7C7[00000000]        mov rdi, resultSpace
   480 000002CB E868000000              call printString
   481                                 
   482 000002D0 4489E0                  mov eax, r12d
   483 000002D3 48C7C606000000          mov rsi, 6
   484 000002DA 49C7C230000000          mov r10, 0x30
   485 000002E1 48C7C100000000          mov rcx, 0
   486 000002E8 49C7C1[00000000]        mov r9, tmpString
   487                                  int2senaryloop1:
   488 000002EF BA00000000              mov edx, 0
   489 000002F4 F7F6                    div esi
   490 000002F6 48FFC1                  inc rcx
   491 000002F9 83F800                  cmp eax, 0
   492 000002FC 75EF                    jne int2senaryloop1
   493 000002FE 4489E0                  mov eax, r12d
   494 00000301 4901C9                  add r9, rcx
   495 00000304 41C60100                mov byte[r9], NULL
   496 00000308 49FFC9                  dec r9
   497                                  int2senaryloop2:
   498 0000030B BA00000000              mov edx, 0
   499 00000310 F7F6                    div esi
   500 00000312 4401D2                  add edx, r10d
   501 00000315 418811                  mov byte[r9], dl
   502 00000318 49FFC9                  dec r9
   503 0000031B 83F800                  cmp eax, 0
   504 0000031E 75E9                    jne int2senaryloop2
   505                                 
   506 00000320 4831FF                  xor rdi, rdi
   507 00000323 BF[00000000]            mov edi, tmpString
   508 00000328 E80B000000              call printString
   509                                 
   510 0000032D 48C7C7[00000000]        mov rdi, resultEnd
   511 00000334 E8FFFFFFFF              call printString
   512                                 
   513 00000339 415C                    pop r12
   514 0000033B 5B                      pop rbx
   515 0000033C C3                      ret
   516                                 
   517                                 
   518                                 
   519                                 
   520                                 
   521                                 
   522                                 
   523                                 
   524                                 
   525                                 
   526                                 
   527                                 
   528                                 
   529                                 
   530                                 
   531                                 
   532                                 
   533                                 
   534                                 [global printString]
   535                                 printString:
   536                                 
   537                                 
   538                                 
   539                                 
   540 0000033D 48C7C200000000          mov rdx, 0
   541                                 strCountLoop:
   542 00000344 803C1700                cmp byte [rdi+rdx], NULL
   543 00000348 7403                    je strCountLoopDone
   544 0000034A 48FFC2                  inc rdx
   545 0000034D EBF3                    jmp strCountLoop
   546                                 strCountLoopDone:
   547 0000034F 4883FA00                cmp rdx, 0
   548 00000353 7411                    je printStringDone
   549                                 
   550                                 
   551                                 
   552                                 
   553 00000355 48C7C001000000          mov rax, SYS_write
   554 0000035C 4889FE                  mov rsi, rdi
   555 0000035F 48C7C701000000          mov rdi, STDOUT
   556                                 
   557 00000366 0F05                    syscall
   558                                 
   559                                 
   560                                 
   561                                 
   562                                 printStringDone:
   563 00000368 C3                      ret
   564                                 
   565                                 
   566                                 
   567                                 
