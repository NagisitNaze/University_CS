     1                                 %line 1+1 procs.asm
     2                                 
     3                                 
     4                                 
     5                                 
     6                                 
     7                                 
     8                                 
     9                                 
    10                                 
    11                                 
    12                                 
    13                                 
    14                                 
    15                                 
    16                                 
    17                                 
    18                                 
    19                                 
    20                                 
    21                                 
    22                                 
    23                                 
    24                                 
    25                                 
    26                                 
    27                                 
    28                                 
    29                                 
    30                                 
    31                                 
    32                                 
    33                                 
    34                                 
    35                                 
    36                                 
    37                                 
    38                                 
    39                                 
    40                                 [section .data]
    41                                 
    42                                 
    43                                 
    44                                 
    45                                 LF equ 10
    46                                 NULL equ 0
    47                                 SPACE equ 0x20
    48                                 
    49                                 TRUE equ 1
    50                                 FALSE equ 0
    51                                 
    52                                 SUCCESS equ 0
    53                                 NOSUCCESS equ 1
    54                                 
    55                                 STDIN equ 0
    56                                 STDOUT equ 1
    57                                 STDERR equ 2
    58                                 
    59                                 SYS_read equ 0
    60                                 SYS_write equ 1
    61                                 SYS_open equ 2
    62                                 SYS_close equ 3
    63                                 SYS_fork equ 57
    64                                 SYS_exit equ 60
    65                                 SYS_creat equ 85
    66                                 SYS_time equ 201
    67                                 
    68                                 O_CREAT equ 0x40
    69                                 O_TRUNC equ 0x200
    70                                 O_APPEND equ 0x400
    71                                 
    72                                 O_RDONLY equ 000000
    73                                 O_WRONLY equ 000001
    74                                 O_RDWR equ 000002
    75                                 
    76                                 S_IRUSR equ 00400
    77                                 S_IWUSR equ 00200
    78                                 S_IXUSR equ 00100
    79                                 
    80                                 
    81                                 
    82                                 
    83 00000000 55736167653A202E2F-    usageMsg db "Usage: ./wc -w <searchWord> <-mc|-ic> -f <inputFile>"
    84 00000000 7763202D77203C7365-
    85 00000000 61726368576F72643E-
    86 00000000 203C2D6D637C2D6963-
    87 00000000 3E202D66203C696E70-
    88 00000000 757446696C653E     
    89 00000034 0A00                    db LF, NULL
    90                                 
    91 00000036 4572726F722C20696E-    errbadCLQ db "Error, invalid command line arguments."
    92 00000036 76616C696420636F6D-
    93 00000036 6D616E64206C696E65-
    94 00000036 20617267756D656E74-
    95 00000036 732E               
    96 0000005C 0A00                    db LF, NULL
    97                                 
    98 0000005E 4572726F722C20696E-    errWordSpec db "Error, invalid search word specifier."
    99 0000005E 76616C696420736561-
   100 0000005E 72636820776F726420-
   101 0000005E 737065636966696572-
   102 0000005E 2E                 
   103 00000083 0A00                    db LF, NULL
   104                                 
   105 00000085 4572726F722C207365-    errWordLength db "Error, search word length must be < 80 "
   106 00000085 6172636820776F7264-
   107 00000085 206C656E677468206D-
   108 00000085 757374206265203C20-
   109 00000085 383020             
   110 000000AC 636861726163746572-     db "characters."
   111 000000AC 732E               
   112 000000B7 0A00                    db LF, NULL
   113                                 
   114 000000B9 4572726F722C20696E-    errFileSpec db "Error, invalid input file specifier."
   115 000000B9 76616C696420696E70-
   116 000000B9 75742066696C652073-
   117 000000B9 70656369666965722E 
   118 000000DD 0A00                    db LF, NULL
   119                                 
   120 000000DF 4572726F722C20696E-    errCaseSpec db "Error, invalid match case specifier."
   121 000000DF 76616C6964206D6174-
   122 000000DF 636820636173652073-
   123 000000DF 70656369666965722E 
   124 00000103 0A00                    db LF, NULL
   125                                 
   126 00000105 4572726F722C206361-    errOpenIn db "Error, can not open input file."
   127 00000105 6E206E6F74206F7065-
   128 00000105 6E20696E7075742066-
   129 00000105 696C652E           
   130 00000124 0A00                    db LF, NULL
   131                                 
   132                                 
   133                                 
   134                                 
   135                                 MAXWORDLENGTH equ 80
   136                                 BUFFSIZE equ 250000
   137                                 
   138                                 
   139 00000126 90D0030000000000       bfMax dq BUFFSIZE
   140 0000012E 90D0030000000000       curr dq BUFFSIZE
   141 00000136 0000000000000000       wordIndex dq 0
   142                                 
   143 0000013E 00                     wasEOF db FALSE
   144                                 
   145 0000013F 4572726F7220726561-    errFileRead db "Error reading input file."
   146 0000013F 64696E6720696E7075-
   147 0000013F 742066696C652E     
   148 00000158 0A00                    db LF, NULL
   149                                 
   150                                 
   151                                 
   152                                 
   153 0000015A 466F756E64202700       resultStart db "Found '", NULL
   154 00000162 272000                 resultSpace db "' ", NULL
   155 00000165 2074696D65732E0A00     resultEnd db " times.", LF, NULL
   156                                 
   157                                 
   158                                 
   159                                 [section .bss]
   160                                 
   161 00000000 <gap>                  buff resb BUFFSIZE+1
   162 0003D091 <gap>                  tmpString resb MAXWORDLENGTH+1
   163                                 
   164                                 
   165                                 
   166                                 
   167                                 [section .text]
   168                                 
   169                                 
   170                                 
   171                                 
   172                                 
   173                                 
   174                                 
   175                                 
   176                                 
   177                                 
   178                                 
   179                                 
   180                                 
   181                                 
   182                                 
   183                                 
   184                                 
   185                                 
   186                                 [global checkParameters]
   187                                 checkParameters:
   188 00000000 53                      push rbx
   189 00000001 4154                    push r12
   190 00000003 4155                    push r13
   191                                 
   192 00000005 4D89C5                  mov r13, r8
   193 00000008 4989CC                  mov r12, rcx
   194 0000000B 4883FF01                cmp rdi, 1
   195 0000000F 7516                    jne noUsage
   196 00000011 48C7C7[00000000]        mov rdi, usageMsg
   197 00000018 E82D030000              call printString
   198 0000001D 48C7C000000000          mov rax, FALSE
   199 00000024 E926010000              jmp dn
   200                                  noUsage:
   201 00000029 4883FF06                cmp rdi, 6
   202 0000002D 7416                    je goodArgCount
   203 0000002F 48C7C7[00000000]        mov rdi, errbadCLQ
   204 00000036 E80F030000              call printString
   205 0000003B 48C7C000000000          mov rax, FALSE
   206 00000042 E908010000              jmp dn
   207                                  goodArgCount:
   208 00000047 488B5E08                mov rbx, qword[rsi+8]
   209 0000004B 803B2D                  cmp byte[rbx], 0x2D
   210 0000004E 750C                    jne errorWordSpec
   211 00000050 807B0177                cmp byte[rbx+1], 0x77
   212 00000054 7506                    jne errorWordSpec
   213 00000056 807B0200                cmp byte[rbx+2], 0x00
   214 0000005A 7500                    jne errorWordSpec
   215 0000005C EB16                    jmp noErrorWordSpec
   216                                  errorWordSpec:
   217 0000005E 48C7C7[00000000]        mov rdi, errWordSpec
   218 00000065 E8E0020000              call printString
   219 0000006A 48C7C000000000          mov rax, FALSE
   220 00000071 E9D9000000              jmp dn
   221                                  noErrorWordSpec:
   222 00000076 488B5E10                mov rbx, qword[rsi+16]
   223 0000007A 4D31DB                  xor r11, r11
   224 0000007D 4D31D2                  xor r10, r10
   225                                  length:
   226 00000080 468A1C13                mov r11b, byte[rbx+r10]
   227 00000084 4180FB00                cmp r11b, NULL
   228 00000088 7409                    je endLength
   229 0000008A 44881A                  mov byte[rdx], r11b
   230 0000008D 48FFC2                  inc rdx
   231 00000090 49FFC2                  inc r10
   232 00000093 EBE9                    jmp length
   233                                  endLength:
   234 00000095 C60200                  mov byte[rdx], NULL
   235 00000098 4983FA50                cmp r10, MAXWORDLENGTH
   236 0000009C 7216                    jb goodLength
   237 0000009E 48C7C7[00000000]        mov rdi, errWordLength
   238 000000A5 E8A0020000              call printString
   239 000000AA 48C7C000000000          mov rax, FALSE
   240 000000B1 E999000000              jmp dn
   241                                  goodLength:
   242 000000B6 488B5E18                mov rbx, qword[rsi+24]
   243 000000BA 813B2D6D6300            cmp dword[rbx], 0x00636D2D
   244 000000C0 7505                    jne checkTwo
   245 000000C2 41C6042401              mov byte[r12], TRUE
   246 000000C7 EB20                    jmp caseGood
   247                                  checkTwo:
   248 000000C9 813B2D696300            cmp dword[rbx], 0x0063692D
   249 000000CF 7418                    je caseGood
   250 000000D1 48C7C7[00000000]        mov rdi, errCaseSpec
   251 000000D8 E86D020000              call printString
   252 000000DD 48C7C000000000          mov rax, FALSE
   253 000000E4 EB6C                    jmp dn
   254 000000E6 41C6042400              mov byte[r12], FALSE
   255                                  caseGood:
   256 000000EB 488B5E20                mov rbx, qword[rsi+32]
   257 000000EF 803B2D                  cmp byte[rbx], 0x2D
   258 000000F2 750C                    jne fileSpecError
   259 000000F4 807B0166                cmp byte[rbx+1], 0x66
   260 000000F8 7506                    jne fileSpecError
   261 000000FA 807B0200                cmp byte[rbx+2], 0x00
   262 000000FE 7500                    jne fileSpecError
   263 00000100 EB13                    jmp goodFileSpec
   264                                  fileSpecError:
   265 00000102 48C7C7[00000000]        mov rdi, errFileSpec
   266 00000109 E83C020000              call printString
   267 0000010E 48C7C000000000          mov rax, FALSE
   268 00000115 EB3B                    jmp dn
   269                                  goodFileSpec:
   270 00000117 488B5E28                mov rbx, qword[rsi+40]
   271 0000011B 48C7C002000000          mov rax, SYS_open
   272 00000122 4889DF                  mov rdi, rbx
   273 00000125 48C7C600000000          mov rsi, O_RDONLY
   274 0000012C 0F05                    syscall
   275 0000012E 4883F800                cmp rax, 0
   276 00000132 7D13                    jge noError
   277 00000134 48C7C7[00000000]        mov rdi, errOpenIn
   278 0000013B E80A020000              call printString
   279 00000140 48C7C000000000          mov rax, FALSE
   280 00000147 EB09                    jmp dn
   281                                  noError:
   282 00000149 41894500                mov dword[r13], eax
   283 0000014D 48C7C001000000          mov rax, TRUE
   284                                  dn:
   285 00000154 415D                    pop r13
   286 00000156 415C                    pop r12
   287 00000158 5B                      pop rbx
   288 00000159 C3                      ret
   289                                 
   290                                 
   291                                 
   292                                 
   293                                 
   294                                 
   295                                 
   296                                 
   297                                 
   298                                 
   299                                 
   300                                 
   301                                 
   302                                 
   303                                 
   304                                 
   305                                 
   306                                 
   307                                 
   308                                 
   309                                 
   310                                 
   311                                 
   312                                 
   313                                 
   314                                 [global getWord]
   315                                 getWord:
   316 0000015A 53                      push rbx
   317 0000015B 4154                    push r12
   318 0000015D 4155                    push r13
   319                                 
   320 0000015F 4889FB                  mov rbx, rdi
   321                                 
   322 00000162 4C8B1425[00000000]      mov r10, qword[bfMax]
   323 0000016A 4C391425[00000000]      cmp qword[curr], r10
   324 00000172 726F                    jb underBuffSize
   325 00000174 803C25[00000000]01      cmp byte[wasEOF], TRUE
   326 0000017C 750A                    jne notEOF
   327 0000017E 48C7C000000000          mov rax, FALSE
   328 00000185 E9D6000000              jmp _dn
   329                                  notEOF:
   330 0000018A 48C7C000000000          mov rax, SYS_read
   331 00000191 4889F7                  mov rdi, rsi
   332 00000194 48C7C6[00000000]        mov rsi, buff
   333 0000019B 48C7C290D00300          mov rdx, BUFFSIZE
   334 000001A2 0F05                    syscall
   335                                 
   336 000001A4 4883F800                cmp rax, 0
   337 000001A8 7D16                    jge readFine
   338 000001AA 48C7C0[00000000]        mov rax, errFileRead
   339 000001B1 E894010000              call printString
   340 000001B6 48C7C000000000          mov rax, FALSE
   341 000001BD E99E000000              jmp _dn
   342                                  readFine:
   343                                 
   344 000001C2 483D90D00300            cmp rax, BUFFSIZE
   345 000001C8 740E                    je notEof
   346 000001CA C60425[00000000]01      mov byte[wasEOF], TRUE
   347 000001D2 48890425[00000000]      mov qword[bfMax], rax
   348                                  notEof
   349 000001DA 4D31D2                  xor r10, r10
   350 000001DD 4C891425[00000000]      mov qword[curr], r10
   351                                  underBuffSize:
   352                                 
   353 000001E5 4D31C9                  xor r9, r9
   354 000001E8 4D31DB                  xor r11, r11
   355 000001EB 4D31E4                  xor r12, r12
   356 000001EE 49C7C4[00000000]        mov r12, buff
   357 000001F5 4C8B2C25[00000000]      mov r13, qword[wordIndex]
   358 000001FD 4C8B0C25[00000000]      mov r9, qword[curr]
   359                                 
   360 00000205 478A1C0C                mov r11b, byte[r12+r9]
   361 00000209 4180FB20                cmp r11b, 0x20
   362 0000020D 750A                    jne wordCont
   363 0000020F 4D31ED                  xor r13, r13
   364 00000212 4180FB10                cmp r11b, 0x10
   365 00000216 7501                    jne wordCont
   366 00000218 4D31ED                  xor r13, r13
   367                                  wordCont:
   368                                 
   369                                  getNextWord:
   370 0000021B 478A1C0C                mov r11b, byte[r12+r9]
   371 0000021F 4180FB20                cmp r11b, 0x20
   372 00000223 760A                    jbe endNextWord
   373 00000225 46881C2B                mov byte[rbx+r13], r11b
   374 00000229 49FFC5                  inc r13
   375 0000022C 49FFC1                  inc r9
   376 0000022F EBE8                    jmp getNextWord
   377                                  endNextWord:
   378                                 
   379 00000231 42C6042B00              mov byte[rbx+r13], NULL
   380                                  ignoreSpaces:
   381 00000236 478A1C0C                mov r11b, byte[r12+r9]
   382 0000023A 4180FB20                cmp r11b, 0x20
   383 0000023E 770C                    ja endIgnoreSpaces
   384 00000240 4180FB00                cmp r11b, 0x00
   385 00000244 7406                    je endIgnoreSpaces
   386 00000246 4D31ED                  xor r13, r13
   387 00000249 49FFC1                  inc r9
   388 0000024C EBE6                    jmp ignoreSpaces
   389                                  endIgnoreSpaces:
   390                                 
   391 0000024E 4C890C25[00000000]      mov qword[curr], r9
   392 00000256 4C892C25[00000000]      mov qword[wordIndex], r13
   393 0000025E 48C7C001000000          mov rax, TRUE
   394                                  _dn:
   395 00000265 415D                    pop r13
   396 00000267 415C                    pop r12
   397 00000269 5B                      pop rbx
   398 0000026A C3                      ret
   399                                 
   400                                 
   401                                 
   402                                 
   403                                 
   404                                 
   405                                 
   406                                 
   407                                 
   408                                 
   409                                 
   410                                 
   411                                 
   412                                 
   413                                 
   414                                 [global checkWord]
   415                                 checkWord:
   416 0000026B 53                      push rbx
   417                                 
   418 0000026C 4D31DB                  xor r11, r11
   419 0000026F 4D31E4                  xor r12, r12
   420                                  wordLoop:
   421 00000272 448A1F                  mov r11b, byte[rdi]
   422 00000275 448A26                  mov r12b, byte[rsi]
   423 00000278 4883FA01                cmp rdx, TRUE
   424 0000027C 741E                    je contCompare
   425 0000027E 4180FB41                cmp r11b, 0x41
   426 00000282 7208                    jb skipSearchWrd
   427 00000284 4180FB5A                cmp r11b, 0x5A
   428 00000288 7702                    ja skipSearchWrd
   429 0000028A 4180C320                add r11b, 0x20
   430                                  skipSearchWrd:
   431 0000028E 4180FC41                cmp r12b, 0x41
   432 00000292 7208                    jb skipCurrentWrd
   433 00000294 4180FC5A                cmp r12b, 0x5A
   434 00000298 7702                    ja skipCurrentWrd
   435 0000029A 4180C420                add r12b, 0x20
   436                                  skipCurrentWrd:
   437                                  contCompare:
   438 0000029E 4538E3                  cmp r11b, r12b
   439 000002A1 7512                    jne endWordLoop
   440 000002A3 4180FB00                cmp r11b, NULL
   441 000002A7 7406                    je endWordLoopInc
   442 000002A9 48FFC7                  inc rdi
   443 000002AC 48FFC6                  inc rsi
   444 000002AF EBBF                    jmp wordLoop
   445                                  endWordLoopInc:
   446 000002B1 8B19                    mov ebx, dword[rcx]
   447 000002B3 FFC3                    inc ebx
   448 000002B5 8919                    mov dword[rcx], ebx
   449                                  endWordLoop:
   450                                 
   451 000002B7 5B                      pop rbx
   452 000002B8 C3                      ret
   453                                 
   454                                 
   455                                 
   456                                 
   457                                 
   458                                 
   459                                 
   460                                 
   461                                 
   462                                 
   463                                 
   464                                 
   465                                 
   466                                 
   467                                 
   468                                 [global displayResults]
   469                                 displayResults:
   470 000002B9 53                      push rbx
   471 000002BA 4154                    push r12
   472                                 
   473 000002BC 4989F4                  mov r12, rsi
   474 000002BF 4889FB                  mov rbx, rdi
   475                                 
   476 000002C2 48C7C7[00000000]        mov rdi, resultStart
   477 000002C9 E87C000000              call printString
   478 000002CE 4889DF                  mov rdi, rbx
   479 000002D1 E874000000              call printString
   480 000002D6 48C7C7[00000000]        mov rdi, resultSpace
   481 000002DD E868000000              call printString
   482                                 
   483 000002E2 4489E0                  mov eax, r12d
   484 000002E5 48C7C606000000          mov rsi, 6
   485 000002EC 49C7C230000000          mov r10, 0x30
   486 000002F3 48C7C100000000          mov rcx, 0
   487 000002FA 49C7C1[00000000]        mov r9, tmpString
   488                                  int2senaryloop1:
   489 00000301 BA00000000              mov edx, 0
   490 00000306 F7F6                    div esi
   491 00000308 48FFC1                  inc rcx
   492 0000030B 83F800                  cmp eax, 0
   493 0000030E 75EF                    jne int2senaryloop1
   494 00000310 4489E0                  mov eax, r12d
   495 00000313 4901C9                  add r9, rcx
   496 00000316 41C60100                mov byte[r9], NULL
   497 0000031A 49FFC9                  dec r9
   498                                  int2senaryloop2:
   499 0000031D BA00000000              mov edx, 0
   500 00000322 F7F6                    div esi
   501 00000324 4401D2                  add edx, r10d
   502 00000327 418811                  mov byte[r9], dl
   503 0000032A 49FFC9                  dec r9
   504 0000032D 83F800                  cmp eax, 0
   505 00000330 75E9                    jne int2senaryloop2
   506                                 
   507 00000332 4831FF                  xor rdi, rdi
   508 00000335 BF[00000000]            mov edi, tmpString
   509 0000033A E80B000000              call printString
   510                                 
   511 0000033F 48C7C7[00000000]        mov rdi, resultEnd
   512 00000346 E8FFFFFFFF              call printString
   513                                 
   514 0000034B 415C                    pop r12
   515 0000034D 5B                      pop rbx
   516 0000034E C3                      ret
   517                                 
   518                                 
   519                                 
   520                                 
   521                                 
   522                                 
   523                                 
   524                                 
   525                                 
   526                                 
   527                                 
   528                                 
   529                                 
   530                                 
   531                                 
   532                                 
   533                                 
   534                                 
   535                                 [global printString]
   536                                 printString:
   537                                 
   538                                 
   539                                 
   540                                 
   541 0000034F 48C7C200000000          mov rdx, 0
   542                                 strCountLoop:
   543 00000356 803C1700                cmp byte [rdi+rdx], NULL
   544 0000035A 7403                    je strCountLoopDone
   545 0000035C 48FFC2                  inc rdx
   546 0000035F EBF3                    jmp strCountLoop
   547                                 strCountLoopDone:
   548 00000361 4883FA00                cmp rdx, 0
   549 00000365 7411                    je printStringDone
   550                                 
   551                                 
   552                                 
   553                                 
   554 00000367 48C7C001000000          mov rax, SYS_write
   555 0000036E 4889FE                  mov rsi, rdi
   556 00000371 48C7C701000000          mov rdi, STDOUT
   557                                 
   558 00000378 0F05                    syscall
   559                                 
   560                                 
   561                                 
   562                                 
   563                                 printStringDone:
   564 0000037A C3                      ret
   565                                 
   566                                 
   567                                 
   568                                 
